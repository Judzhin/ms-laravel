version: '3.5'

services:
  busybox:
    container_name: laravel-busybox-${APP_ENV:-dev}
    image: busybox
    volumes:
      - ./:/var/www/html:rw
      - /var/lib/mysql
      - ./:/app:rw
      - ./var/log/nginx:/var/log/nginx:rw

  php-fpm:
    container_name: laravel-php-fpm-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/php-fpm/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-dev}
        TZ: ${TZ:-Europe/Kiev}
    volumes_from:
      - busybox
    networks:
      - laravel

  composer:
    container_name: laravel-composer-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/php-fpm/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-dev}
        TZ: ${TZ:-Europe/Kiev}
    entrypoint: composer
    #    volumes:
    #      - ./docker/php/disable-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    volumes_from:
      - busybox
    networks:
      - laravel

  artisan:
    container_name: laravel-artisan-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/php-fpm/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-dev}
        TZ: ${TZ:-Europe/Kiev}
    entrypoint:
      - php
      - artisan
    volumes_from:
      - busybox
    networks:
      - laravel

  queue:
    container_name: laravel-queue-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/php-fpm/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-dev}
        TZ: ${TZ:-Europe/Kiev}
    restart: on-failure
    volumes_from:
      - busybox
    entrypoint:
      - php
      - artisan
    command: queue:work --tries=3 --queue=default

  nginx:
    container_name: laravel-nginx-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/nginx/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-dev}
    volumes_from:
      - busybox
    ports:
      - ${NGINX_PORT:-8080}:80
    depends_on:
      - php-fpm
    networks:
      - laravel

  node:
    container_name: laravel-node-${APP_ENV:-dev}
    image: node:14-alpine
    working_dir: /app
#    volumes:
#      - ./:/app:rw
    volumes_from:
      - busybox
    # command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && npm ci && npm run dev"
    networks:
      - laravel

  mariadb:
    container_name: laravel-mariadb-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/mariadb/Dockerfile
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-laravel.dev}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-root}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    ports:
      - ${MYSQL_PORT:-9033}:3306
#    volumes:
#      - laravel-data:/var/lib/mysql:rw
    volumes_from:
      - busybox
    networks:
      - laravel

  pma:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel-pma-${APP_ENV:-dev}
    ports:
      - ${PMA_PORT:-33080}:80
    environment:
      PMA_HOST: ${PMA_HOST:-mariadb}
    depends_on:
      - mariadb
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

